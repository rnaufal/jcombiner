buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id 'java-library'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

apply plugin: 'org.junit.platform.gradle.plugin'

group 'br.com.rnaufal'
version '1.0.0-SNAPSHOT'

ext.moduleName = 'impl.main'
ext.junitJupiterVersion = '5.2.0'
ext.mockitoVersion = '2.21.0'

sourceCompatibility = 1.10

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':api')
    implementation 'org.apache.commons:commons-collections4:4.2'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'com.google.guava:guava:23.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testImplementation("org.hamcrest:hamcrest-all:1.3")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testImplementation("org.mockito:mockito-core:${mockitoVersion}")
    testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
}

jacoco {
    toolVersion = '0.8.1'
    applyTo junitPlatformTest
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

jacocoTestCoverageVerification.dependsOn jacocoTestReport

check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}

junitPlatformTest {
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }

    testLogging.showStandardStreams = true

    testLogging {

        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

build.dependsOn jacocoTestReport